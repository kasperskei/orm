(function () {var a={};class e{constructor(t){Object.values(this.constructor.fields).filter(({isForeignEntity:t})=>!t).forEach(({field:e,isEnum:o})=>{var r;const s=o?[]:void 0;this[e]=null!==(r=t[e])&&void 0!==r?r:s})}}const f=($,a,t)=>{$[a]=t},g=($,a,t)=>{$[a].includes(t)||$[a].push(t)},b=$=>$?g:f;const h=(t,$)=>void 0!==t[$]?[t[$]]:[],i=(t,$)=>{var e;return null!==(e=t[$])&&void 0!==e?e:[]},c=t=>t?i:h;const j=e=>{const r=Object.values(e.fields).filter(({isForeignKey:e,foreignField:r})=>e&&void 0!==r).map(({field:e,foreignField:r,foreignModel:t,isEnum:i})=>{const o=b(t.fields[r].isEnum),a=c(i);return i=>a(i,e).forEach(e=>{const a=t.source.get(e);void 0!==a&&o(a,r,i.id)})});return Object.defineProperty(e,"insert",{value(...t){t.flat().forEach(t=>{r.forEach(e=>e(t)),e.source.set(t.id,new e(t))})}}),e};const k=e=>Object.defineProperties(e.prototype,{update:{value(t){e.update({...t,id:this.id})}},delete:{value(){e.delete(this.id)}}});const l=(e,$,u)=>{e[$]=null},m=(e,$,u)=>{const r=e[$].indexOf(u);-1!==r&&e[$].splice(r,1)},d=e=>e?m:l;const n=(e,t)=>[t.filter(t=>!e.includes(t)),e.filter(e=>!t.includes(e))];const o=e=>{const r=Object.values(e.fields).filter(e=>!e.isForeignEntity),i=Object.values(e.fields).filter(({isForeignKey:e,foreignField:r})=>e&&void 0!==r).reduce((e,{field:r,foreignField:i,foreignModel:t,isEnum:a})=>{const f=b(t.fields[i].isEnum),o=d(t.fields[i].isEnum),l=c(a);return e[r]=(e,a)=>{if(!(r in a))return;const[u,s]=n(l(e,r),l(a,r));s.forEach(r=>{const a=t.source.get(r);void 0!==a&&o(a,i,e.id)}),u.forEach(r=>{const a=t.source.get(r);void 0!==a&&f(a,i,e.id)})},e},{});return Object.defineProperty(e,"update",{value(...t){t.flat().forEach(t=>{const a=e.source.get(t.id);void 0!==a&&r.forEach(({field:e,isForeignKey:r})=>{e in t&&(r&&i[e](a,t),a[e]=t[e])})})}}),e};const p=($,l,a)=>$[l]===a,q=($,l,a)=>$[l].includes(a),s=$=>$?q:p;const r=e=>{const r=Object.values(e.fields).filter(({isForeignKey:e,foreignField:r})=>e&&void 0!==r).map(({foreignField:e,foreignModel:r})=>{const t=s(r.fields[e].isEnum),l=d(r.fields[e].isEnum);return c=>r.source.forEach(r=>{t(c)&&l(r,e,c)})});return Object.defineProperties(e,{delete:{value(...t){t.flat().forEach(t=>{r.forEach(e=>e(t)),e.source.delete(t)})}},deleteAll:{value:()=>e.delete(...e.source.keys())}}),e};const t=e=>Object.defineProperties(e,{size:{get:()=>e.source.size},keys:{get:()=>[...e.source.keys()]},values:{get:()=>[...e.source.values()]},entries:{get:()=>[...e.source.entries()]},get:{value:s=>e.source.get(s)},has:{value:s=>e.source.has(s)}});const u=(e,t)=>function(){return e.source.get(this[t])},v=(e,t)=>function(){return this[t].map(t=>e.source.get(t))},w=(e,t)=>function(){return[...e.source.values()].find(e=>e[t]===this.id)},x=(e,t)=>function(){return[...e.source.values()].find(e=>e[t].includes(this.id))},y=(e,t)=>function(){return[...e.source.values()].filter(e=>e[t]===this.id)},z=(e,t)=>function(){return[...e.source.values()].filter(e=>e[t].includes(this.id))},A=e=>Object.defineProperties(e.prototype,Object.values(e.fields).filter(e=>e.isForeignEntity).reduce((e,{field:t,foreignField:i,foreignModel:n,localField:c,isEnum:s})=>(void 0!==c?e[t]={get:s?v(n,c):u(n,c)}:void 0!==i&&(n.fields[i].isEnum?e[t]={get:s?z(n,i):x(n,i)}:e[t]={get:s?y(n,i):w(n,i)}),e),{}));const B=e=>o=>Object.defineProperties(o,{source:{value:e.entities[o.name]},fields:{value:Object.entries(o.fields).reduce((o,[t,r])=>{if(o[t]={field:t,...r},"foreignModel"in r){const i="string"==typeof r.foreignModel?e.models[r.foreignModel]:r.foreignModel;0,Object.assign(o[t],{foreignModel:i})}return o},{})}});class C{constructor(...e){this.entities={},this.models={},e.flat().map(e=>(this.entities[e.name]=new Map,this.models[e.name]=e,e)).map(e=>(B(this)(e),e)).map(e=>(j(e),t(e),o(e),r(e),k(e),A(e),e))}}a.Model=e,a.Database=C;if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=a}else if(typeof define==="function"&&define.amd){define(function(){return a})}})();